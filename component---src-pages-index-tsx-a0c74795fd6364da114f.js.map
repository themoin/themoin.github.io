{"version":3,"sources":["webpack:///./src/components/TagExplorer.tsx","webpack:///./src/pages/index.tsx"],"names":["TagExplorerWrapper","styled","div","TagExplorer","group","console","log","map","item","tag","totalCount","PostHeader","section","TagWrapper","ul","Tag","li","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","className","style","listStyle","post","frontmatter","fields","slug","key","to","itemProp","itemScope","itemType","date","tags","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"iOAIMA,EAAqBC,IAAOC,IAAV,sFAAGD,CAAH,4GAyBTE,EAdK,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAErB,OADAC,QAAQC,IAAIF,GAEV,kBAACJ,EAAD,KACE,oCAEEI,EAAMG,KAAI,SAAAC,GAAI,OACd,kCAAQA,EAAKC,IAAb,MAAqBD,EAAKE,iBCb5BC,EAAaV,IAAOW,QAAV,wEAAGX,CAAH,+NAuBVY,EAAaZ,IAAOa,GAAV,wEAAGb,CAAH,wCAKVc,EAAMd,IAAOe,GAAV,iEAAGf,CAAH,mGAiFIgB,GAFEC,UAtEG,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,mBACX,kBAAC,IAAD,MACA,+CAQJ,kBAAC,WAAD,KAEE,kBAACb,EAAD,CAAYkB,UAAU,YACpB,2BACE,sDAGJ,kBAAC,IAAD,CAAQT,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cAEX,kBAAC,EAAD,CAAapB,MAAOe,EAAKO,kBAAkBtB,QAC3C,wBAAI0B,MAAO,CAAEC,UAAW,SACrBN,EAAMlB,KAAI,SAACyB,GACV,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,KAAMG,SAAS,OACnC,6BACET,UAAU,iBACVU,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,0BAAMF,SAAS,YAAYd,IAE7B,+BAAQQ,EAAKC,YAAYQ,OAE3B,iCACE,kBAAC5B,EAAD,KACGmB,EAAKC,YAAYS,KAAQV,EAAKC,YAAYS,KAAKnC,KAAI,SAACE,GACnD,OAAQ,kBAACM,EAAD,SAAON,MAAiB,MAGpC,uBACEkC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CR,SAAS,2BAgBR","file":"component---src-pages-index-tsx-a0c74795fd6364da114f.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\n\nconst TagExplorerWrapper = styled.div`\n  position: absolute;\n  right: 15px;\n  top: 50%;\n  height: 430px;\n  width: 200px;\n  @media (max-width: 1366px) {\n    display: none;\n  }\n`;\n\nconst TagExplorer = ({ group }) => {\n  console.log(group)\n  return (\n    <TagExplorerWrapper>\n      <h4>Tags</h4>\n      {\n        group.map(item => (\n        <span>#{item.tag} - {item.totalCount}</span>\n        ))\n      }\n    </TagExplorerWrapper>\n  );\n};\n\nexport default TagExplorer;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","import React, { Fragment, useState } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport TagExplorer from \"../components/TagExplorer\"\n\nconst PostHeader = styled.section`\nwidth: 100%;\n  height: 380px;\n  padding: 75px;\n  display: flex;\n  justify-content: center;\n  & > p {\n    margin-top: 220px;\n  }\n  h1,\n  h2 {\n    margin: 0;\n    padding: 0;\n    text-align: right;\n    color: white;\n  }\n  h1 {\n    font-size: 4em;\n    font-weight: 900;\n    text-shadow: 0 0 3px blueviolet;\n  }\n`;\n\nconst TagWrapper = styled.ul`\n  list-style-type: none;\n  display: flex;\n`\n\nconst Tag = styled.li`\n  margin-right: 12px;\n  height: 25px;\n  padding: 4px;\n  line-height: 25px;\n  font-size: 14px;\n  border-radius: 14px;\n`\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"MOIN 모인 기술 블로그\" />\n        <Bio />\n        <p>\n          SOMETHING WRONG\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Fragment>\n\n      <PostHeader className=\"skeleton\">\n        <p>\n          <h1>MOIN 기술 블로그는 공사중입니다.</h1>\n        </p>\n      </PostHeader>\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {/* <Bio /> */}\n        <TagExplorer group={data.allMarkdownRemark.group}  />\n        <ol style={{ listStyle: `none` }}>\n          {posts.map((post) => {\n            const title = post.frontmatter.title || post.fields.slug;\n\n            return (\n              <li key={post.fields.slug}>\n                <Link to={post.fields.slug} itemProp=\"url\">\n                  <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <header>\n                      <h2>\n                        <span itemProp=\"headline\">{title}</span>\n                      </h2>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <TagWrapper>\n                        {post.frontmatter.tags ? (post.frontmatter.tags.map((tag) => {\n                          return (<Tag>#{tag}</Tag>)})) : null\n                      }\n                      </TagWrapper>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </section>\n                  </article>\n                </Link>\n              </li>\n            );\n          })}\n        </ol>\n      </Layout>\n    </Fragment>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n    group(field: frontmatter___tags) {\n      tag: fieldValue\n      totalCount\n    }\n    nodes {\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n}\n`;\n"],"sourceRoot":""}