{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/seo.tsx"],"names":["UsingTypescript","data","path","location","title","site","buildTime","href","to","query","SEO","description","lang","meta","useStaticQuery","metaDescription","siteMetadata","defaultTitle","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"mappings":"8FAAA,0GAoCeA,UAvByC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,SAAf,OACtD,kBAAC,IAAD,CAAQC,MAAM,mBAAmBD,SAAUA,GACzC,kBAAC,IAAD,CAAKC,MAAM,qBACX,sEACA,uEAC2C,wCAD3C,+DAEM,2CAFN,wEAIA,uEAC2C,0CAD3C,oBAC+E,0CAD/E,eAC+G,IAC7G,yCAFF,UAIA,6DACiCF,EADjC,wBAC4DD,EAAKI,KAAKC,UADtE,KAGA,6DACkC,IAChC,uBAAGC,KAAK,6CAAR,kCAFF,KAIA,kBAAC,OAAD,CAAMC,GAAG,KAAT,6BAMG,IAAMC,EAAQ,c,kCCtCrB,iDAYMC,EAAM,SAAC,GAAuC,UAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMT,EAAY,EAAZA,MAC9BC,EAASS,yBAAe,cAAxBT,KAgBFU,EAAkBJ,GAAeN,EAAKW,aAAaL,YACnDM,EAAY,UAAGZ,EAAKW,oBAAR,aAAG,EAAmBZ,MAExC,OACE,kBAAC,SAAD,CACEc,eAAgB,CACdN,QAEFR,MAAOA,EACPe,cAAeF,EAAe,QAAQA,EAAiB,KACvDJ,KAAM,CACJ,CACEO,KAAM,cACNC,QAASN,GAEX,CACEO,SAAU,WACVD,QAASjB,GAEX,CACEkB,SAAU,iBACVD,QAASN,GAEX,CACEO,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,SAAS,UAAAhB,EAAKW,oBAAL,mBAAmBO,cAAnB,eAA2BC,UAA3B,IAEX,CACEJ,KAAM,gBACNC,QAASjB,GAEX,CACEgB,KAAM,sBACNC,QAASN,IAEXU,OAAOZ,MAKfH,EAAIgB,aAAe,CACjBd,KAAM,KACNC,KAAM,GACNF,YAAa,IAUAD","file":"component---src-pages-using-typescript-tsx-179f9049f74683c408ed.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from 'react'\nimport { PageProps, Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path, location }) => (\n  <Layout title='Using TypeScript' location={location}>\n    <SEO title='Using TypeScript' />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that\n      the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a{' '}\n      <em>.tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{' '}\n      <a href='https://www.gatsbyjs.com/docs/typescript/'>documentation about TypeScript</a>.\n    </p>\n    <Link to='/'>Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Helmet } from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}