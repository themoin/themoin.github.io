{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["PostHeader","styled","section","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","to","itemProp","className","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,sIAQMA,EAAaC,IAAOC,QAAV,wEAAGD,CAAH,gTAsFDE,UA7DG,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,mBACX,kBAAC,IAAD,MACA,yLASJ,kBAAC,WAAD,KACE,kBAACT,EAAD,KACE,2BACE,6CAGJ,kBAAC,IAAD,CAAQK,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cAGX,wBAAIK,MAAO,CAAEC,UAAW,SACrBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,kBAAC,OAAD,CAAME,GAAIL,EAAKE,OAAOC,KAAMG,SAAS,OACnC,6BAASC,UAAU,iBAAiBC,WAAS,EAACC,SAAS,6BACrD,gCACE,4BACE,0BAAMH,SAAS,YAAYd,IAE7B,+BAAQQ,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CR,SAAS,2BAgB1B,IAAMS,EAAY","file":"component---src-pages-index-tsx-cb08c4687279b0bf41de.js","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport styled from 'styled-components'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst PostHeader = styled.section`\n  height: 380px;\n  padding: 75px;\n  background-image: url('/city.jpeg');\n  background-position: bottom;\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  & > p {\n    margin-top: 220px;\n  }\n  h1,\n  h2 {\n    margin: 0;\n    padding: 0;\n    text-align: right;\n    color: white;\n  }\n  h1 {\n    font-size: minmax(4em, 4vw);\n    font-weight: 300;\n    text-shadow: 0 0 50px black;\n  }\n`\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title='MOIN 모인 기술 블로그' />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the directory you specified for the\n          \"gatsby-source-filesystem\" plugin in gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Fragment>\n      <PostHeader>\n        <p>\n          <h1>MOIN 기술 블로그</h1>\n        </p>\n      </PostHeader>\n      <Layout location={location} title={siteTitle}>\n        <SEO title='All posts' />\n        {/* <Bio /> */}\n\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <Link to={post.fields.slug} itemProp='url'>\n                  <article className='post-list-item' itemScope itemType='http://schema.org/Article'>\n                    <header>\n                      <h2>\n                        <span itemProp='headline'>{title}</span>\n                      </h2>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp='description'\n                      />\n                    </section>\n                  </article>\n                </Link>\n              </li>\n            )\n          })}\n        </ol>\n      </Layout>\n    </Fragment>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}